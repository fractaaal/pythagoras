{"version":3,"sources":["components/Form.jsx","components/Triangle.jsx","components/Length.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","Form","props","classes","className","noValidate","autoComplete","TextField","name","label","variant","onChange","handleChange","Button","color","href","onClick","calculate","Triangle","useStyle","useSpring","height","borderRight","a","borderBottom","b","marginLeft","div","style","Length","c","App","event","setState","target","Number","value","reg","RegExp","state","s","t","alert","test","preventDefault","bind","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAyBEC,EAnBF,SAACC,GACV,IAAMC,EAAUT,IAEhB,OACI,8BACA,uBAAMU,UAAWD,EAAQN,KAAMQ,YAAU,EAACC,aAAa,MAAvD,UACI,cAACC,EAAA,EAAD,CAAWC,KAAK,IAAIC,MAAM,sBAAOC,QAAQ,WAAWC,SAAUT,EAAMU,eACpE,cAACL,EAAA,EAAD,CAAWC,KAAK,IAAIC,MAAM,sBAAOC,QAAQ,WAAWC,SAAUT,EAAMU,eACpE,cAACC,EAAA,EAAD,CAAQH,QAAQ,YAAYI,MAAM,UAAUC,KAAK,qBAAqBC,QAAWd,EAAMe,UAAvF,0B,QCLGC,EAfE,SAAChB,GACd,IAAMiB,EAAWC,oBAAU,CACvBpB,MAAO,EACPqB,OAAQ,EACRC,YAAY,GAAD,OAAa,GAARpB,EAAMqB,EAAX,wBACXC,aAAa,GAAD,OAAa,GAARtB,EAAMuB,EAAX,sBACZC,WAAY,UAGhB,OACI,cAAC,WAASC,IAAV,CAAcC,MAAOT,KCLdU,G,MANA,SAAC3B,GACZ,OACI,mCAAMA,EAAMqB,EAAZ,MAAkBrB,EAAMuB,EAAxB,MAA8BvB,EAAM4B,OC4E7BC,E,kDAzEb,WAAY7B,GAAO,IAAD,8BAChB,cAAMA,IAcRU,aAAe,SAACoB,GACd,EAAKC,SAAL,eACGD,EAAME,OAAO1B,KAAM2B,OAAOH,EAAME,OAAOE,UAjB1B,EAqBlBnB,UAAY,SAACe,GACX,IAAMK,EAAM,IAAIC,OAAO,YAEvB,QAAO,GACL,KAAK,EAAKC,MAAMC,EAAE,GAAG,EAAKD,MAAME,EAAE,EAChCC,MAAM,8DACN,MACF,KAAOL,EAAIM,KAAK,EAAKJ,MAAMC,KAAOH,EAAIM,KAAK,EAAKJ,MAAME,GACpDC,MAAM,iGACN,MACF,KAAK,EAAKH,MAAMC,EAAE,EAAKD,MAAME,EAC3BC,MAAM,mEACN,MACF,KAAM,EAAKH,MAAMC,EAAE,IAAO,GAAM,EAAKD,MAAME,EAAE,IAAO,EAClDC,MAAM,mEACN,MACF,KAAM,EAAKH,MAAMC,EAAE,IAAO,EACxBE,MAAM,4DACN,MACF,KAAM,EAAKH,MAAME,EAAE,IAAO,EACxBC,MAAM,4DACN,MAEF,QACE,EAAKT,SAAS,CACZV,EAAE,EAAKgB,MAAMC,EAAE,EAAKD,MAAME,EAC1BhB,GAAG,WAAKc,MAAME,EAAG,GAAd,SAAgB,EAAKF,MAAMC,EAAG,IAAG,EACpCV,GAAG,WAAKS,MAAME,EAAG,GAAd,SAAgB,EAAKF,MAAMC,EAAG,IAAG,IAM1CR,EAAMY,kBApDN,EAAKL,MAAQ,CACXC,EAAE,EACFC,EAAE,EACFlB,EAAE,EACFE,EAAE,EACFK,EAAE,GAGJ,EAAKlB,aAAe,EAAKA,aAAaiC,KAAlB,gBACpB,EAAK5B,UAAY,EAAKA,UAAU4B,KAAf,gBAXD,E,0CAyDlB,WAGE,OAFAC,QAAQC,IAAIC,KAAKT,MAAMC,EAAEQ,KAAKT,MAAME,GAGlC,gCACE,uJACA,cAAC,EAAD,CAAM7B,aAAcoC,KAAKpC,aAAcK,UAAW+B,KAAK/B,YACvD,cAAC,EAAD,CAAQM,EAAGyB,KAAKT,MAAMhB,EAAGE,EAAGuB,KAAKT,MAAMd,EAAGK,EAAGkB,KAAKT,MAAMT,IACxD,cAAC,EAAD,CAAUP,EAAGyB,KAAKT,MAAMhB,EAAGE,EAAGuB,KAAKT,MAAMd,W,GAlE/BwB,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f98e4f0.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nconst Form = (props) => {\n    const classes = useStyles();\n\n    return(\n        <div>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField name=\"s\" label=\"sを入力\" variant=\"outlined\" onChange={props.handleChange}/>\n            <TextField name=\"t\" label=\"tを入力\" variant=\"outlined\" onChange={props.handleChange}/>\n            <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick = {props.calculate}>\n                CREATE\n            </Button>\n        </form>\n\n\n        </div>\n\n    )\n}\n\nexport default Form","import React from 'react'\nimport {useSpring, animated} from 'react-spring'\n\nconst Triangle = (props) => {\n    const useStyle = useSpring({\n        width: 0,\n        height: 0,\n        borderRight: `${props.a*10}px solid transparent`,\n        borderBottom: `${props.b*10}px solid lightblue`,\n        marginLeft: '100px'\n    })\n\n    return(\n        <animated.div style={useStyle}></animated.div>\n\n    )\n}\n\nexport default Triangle","import React from 'react'\n\nconst Length = (props) => {\n    return(\n        <p>a={props.a} b={props.b} c={props.c}</p>\n    )\n}\n\nexport default Length","import React from 'react'\nimport Form from './components/Form'\nimport Triangle from './components/Triangle'\nimport './App.css';\nimport Length from './components/Length';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      s:1,\n      t:3,\n      a:3,\n      b:4,\n      c:5\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.calculate = this.calculate.bind(this)\n\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]:Number(event.target.value)\n    })\n  }\n\n  calculate = (event) => {\n    const reg = new RegExp(/^[0-9]*$/)\n\n    switch(true){\n      case(this.state.s<1||this.state.t<1):\n        alert('sとtは1以上の整数です!')\n        break;\n      case(!(reg.test(this.state.s))||!(reg.test(this.state.t))):\n        alert('sとtは半角数字で入力してください!')\n        break;\n      case(this.state.s>this.state.t):\n        alert('sはt以下にしてください!')\n        break;\n      case((this.state.s%2) === 0 && (this.state.t%2) === 0):\n        alert('sとtが偶数になってます!')\n        break;\n      case((this.state.s%2) === 0):\n        alert('sが偶数になってます!')\n        break;\n      case((this.state.t%2) === 0):\n        alert('tが偶数になってます!')\n        break;\n\n      default:\n        this.setState({\n          a:this.state.s*this.state.t,\n          b:(this.state.t**2-this.state.s**2)/2,\n          c:(this.state.t**2+this.state.s**2)/2\n        })\n        break;\n    }\n\n\n    event.preventDefault()\n  }\n\n  render(){\n    console.log(this.state.s,this.state.t)\n\n    return(\n      <div>\n        <h3>互いに素な奇数s,tを入力してください (1≦s≦t)</h3>\n        <Form handleChange={this.handleChange} calculate={this.calculate} />\n        <Length a={this.state.a} b={this.state.b} c={this.state.c}/>\n        <Triangle a={this.state.a} b={this.state.b}/>\n      </div>\n\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}